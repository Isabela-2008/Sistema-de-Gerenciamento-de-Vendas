-- Criação do Banco de Dados
CREATE DATABASE IF NOT EXISTS sistema_vendas;
USE sistema_vendas;

-- Criação das Tabelas
-- Tabela de Clientes
CREATE TABLE IF NOT EXISTS Clientes (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,  -- Identificador único do cliente, chave primária, auto incremento
    nome VARCHAR(100) NOT NULL,                -- Nome do cliente
    email VARCHAR(100) UNIQUE NOT NULL,        -- Email do cliente, único
    telefone VARCHAR(15)                       -- Telefone do cliente
);

-- Tabela de Produtos
CREATE TABLE IF NOT EXISTS Produtos (
    id_produto INT AUTO_INCREMENT PRIMARY KEY,  -- Identificador único do produto, chave primária, auto incremento
    nome VARCHAR(100) NOT NULL,                -- Nome do produto
    preco DECIMAL(10, 2) NOT NULL,            -- Preço do produto
    quantidade_estoque INT NOT NULL            -- Quantidade em estoque do produto
);

-- Tabela de Vendas
CREATE TABLE IF NOT EXISTS Vendas (
    id_venda INT AUTO_INCREMENT PRIMARY KEY,   -- Identificador único da venda, chave primária, auto incremento
    id_cliente INT NOT NULL,                   -- Identificador do cliente, chave estrangeira referenciando Clientes
    id_produto INT NOT NULL,                   -- Identificador do produto, chave estrangeira referenciando Produtos
    quantidade INT NOT NULL,                   -- Quantidade vendida
    data_venda DATE NOT NULL,                  -- Data da venda
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente),
    FOREIGN KEY (id_produto) REFERENCES Produtos(id_produto)
);

-- Inserção de Dados
-- Inserindo Clientes
INSERT INTO Clientes (nome, email, telefone)
VALUES
('Ana Silva', 'ana.silva@example.com', '123456789'),
('João Santos', 'joao.santos@example.com', '987654321'),
('Maria Oliveira', 'maria.oliveira@example.com', '555555555');

-- Inserindo Produtos
INSERT INTO Produtos (nome, preco, quantidade_estoque)
VALUES
('Laptop', 2500.00, 10),
('Smartphone', 1200.00, 25),
('Tablet', 800.00, 15);

-- Inserindo Vendas
INSERT INTO Vendas (id_cliente, id_produto, quantidade, data_venda)
VALUES
(1, 1, 1, '2024-09-01'),  -- Ana Silva comprou 1 Laptop em 01/09/2024
(2, 2, 2, '2024-09-02'),  -- João Santos comprou 2 Smartphones em 02/09/2024
(1, 3, 1, '2024-09-03'),  -- Ana Silva comprou 1 Tablet em 03/09/2024
(3, 1, 1, '2024-09-04'),  -- Maria Oliveira comprou 1 Laptop em 04/09/2024
(2, 3, 2, '2024-09-05');  -- João Santos comprou 2 Tablets em 05/09/2024

-- Consultas e Relatórios
-- Consulta que mostra todas as vendas realizadas, incluindo o nome do cliente e o nome do produto
SELECT 
    c.nome AS Cliente,
    p.nome AS Produto,
    v.quantidade AS Quantidade,
    v.data_venda AS Data_Venda
FROM 
    Vendas v
JOIN 
    Clientes c ON v.id_cliente = c.id_cliente
JOIN 
    Produtos p ON v.id_produto = p.id_produto;

-- Consulta que mostra todas as compras realizadas por um cliente específico
-- Substitua 1 pelo id_cliente desejado
SELECT 
    p.nome AS Produto,
    v.quantidade AS Quantidade,
    v.data_venda AS Data_Venda
FROM 
    Vendas v
JOIN 
    Produtos p ON v.id_produto = p.id_produto
WHERE 
    v.id_cliente = 1;

-- Consulta que exibe o total de vendas realizadas por produto
SELECT 
    p.nome AS Produto,
    SUM(v.quantidade) AS Total_Vendido
FROM 
    Vendas v
JOIN 
    Produtos p ON v.id_produto = p.id_produto
GROUP BY 
    p.nome;

-- Atualização e Deleção de Dados
-- Atualize o estoque de um produto após uma venda
-- Exemplo: Atualizar o estoque do produto com id_produto = 1 após uma venda de 1 unidade
UPDATE Produtos
SET quantidade_estoque = quantidade_estoque - 1
WHERE id_produto = 1;

-- Atualize as informações de um cliente
-- Exemplo: Atualizar o telefone do cliente com id_cliente = 2
UPDATE Clientes
SET telefone = '999999999'
WHERE id_cliente = 2;

-- Deletar uma venda e, se necessário, deletar o cliente associado
-- Exemplo: Deletar uma venda com id_venda = 1 e o cliente associado, se não houver outras vendas para o mesmo cliente
-- Primeiro exclua as vendas associadas ao cliente
DELETE FROM Vendas
WHERE id_cliente = 3;

-- Agora exclua o cliente
DELETE FROM Clientes
WHERE id_cliente = 3;

-- Remover um produto e todas as vendas associadas a esse produto
-- Primeiro exclua as vendas associadas ao produto
DELETE FROM Vendas
WHERE id_produto = 3;

-- Agora exclua o produto
DELETE FROM Produtos
WHERE id_produto = 3;
